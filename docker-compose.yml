version: "3.7"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - backend-net-internal

  kibana:
    image: docker.elastic.co/kibana/kibana:8.3.3
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
      - elasticsearch
    networks:
      - backend-net-internal
      - app-net

  logstash:
    image: docker.elastic.co/logstash/logstash:8.3.3
    container_name: logstash
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - backend-net-internal
    depends_on:
      - elasticsearch

  rabbit-mq:
    image: rabbitmq:3.12-management
    container_name: rabbit-mq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend-net-internal
      - app-net

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - backend-net-internal

  config-server:
    image: abdulmoniemalazzaly/config-server:1.0
    container_name: config-server
    ports:
      - "8012:8012"
    networks:
      - backend-net-internal
      - app-net
    depends_on:
      - logstash
      - zipkin
      - rabbit-mq

  eureka-peer1:
    image: abdulmoniemalazzaly/eureka-cluster:1.0
    container_name: eureka-peer1
    environment:
      - "SPRING_APPLICATION_NAME=eurekaDiscoverServerCluster"
      - "SPRING_PROFILES_ACTIVE=peer1"
    ports:
      - "8761:8761"
    healthcheck:
      test: "curl --fail --silent localhost:8012/actuator/health/readiness | grep UP || exist 1 "
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - backend-net-internal
      - app-net
    depends_on:
      - config-server

  eureka-peer2:
    image: abdulmoniemalazzaly/eureka-cluster:1.0
    container_name: eureka-peer2
    environment:
      - "SPRING_PROFILES_ACTIVE=peer2"
    ports:
      - "8762:8762"
    healthcheck:
      test: "curl --fail --silent localhost:8012/actuator/health/readiness | grep UP || exist 1 "
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - backend-net-internal
      - app-net
    depends_on:
      - config-server
      - eureka-peer1

  eureka-peer3:
    image: abdulmoniemalazzaly/eureka-cluster:1.0
    container_name: eureka-peer3
    environment:
      - "SPRING_PROFILES_ACTIVE=peer3"
    ports:
      - "8763:8763"
    healthcheck:
      test: "curl --fail --silent localhost:8012/actuator/health/readiness | grep UP || exist 1 "
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - backend-net-internal
      - app-net
    depends_on:
      - config-server
      - eureka-peer1
      - eureka-peer2

  api-gateway:
    image: abdulmoniemalazzaly/api-gateway:1.0
    container_name: api-gateway
    ports:
      - "8083:8083"
    healthcheck:
      test: "curl --fail --silent localhost:8012/actuator/health/readiness | grep UP || exist 1 "
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - backend-net-internal
      - app-net
    depends_on:
      - config-server
      - auth-service

  mysql-ser:
    image: "mysql:8.0"
    container_name: mysql
    ports:
      - "3307:3306"
    networks:
      - backend-net-internal
      - app-net
    environment:
      - MYSQL_DATABASE=Test_DB 
      - MYSQL_PASSWORD=root 
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - type: volume
        source: sqlvol
        target: /var/lib/mysql

  auth-service:
      image: abdulmoniemalazzaly/auth-service:1.0
      container_name: auth-service
      healthcheck:
        test: "curl --fail --silent localhost:8012/actuator/health/readiness | grep UP || exist 1 "
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 10s
      networks:
        - backend-net-internal
      depends_on:
        - config-server
        - mysql-ser

  user-service:
      image: abdulmoniemalazzaly/user-service:1.0
      container_name: user-service
      healthcheck:
        test: "curl --fail --silent localhost:8012/actuator/health/readiness | grep UP || exist 1 "
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 10s
      networks:
        - backend-net-internal
      depends_on:
        - config-server
        - mysql-ser
  
  book-service:
      image: abdulmoniemalazzaly/book-service:1.0
      container_name: book-service
      healthcheck:
        test: "curl --fail --silent localhost:8012/actuator/health/readiness | grep UP || exist 1 "
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 10s
      networks:
        - backend-net-internal
      depends_on:
        - config-server
        - mysql-ser

  notification-service:
      image: abdulmoniemalazzaly/notification-service:1.0
      container_name: notification-service
      healthcheck:
        test: "curl --fail --silent localhost:8012/actuator/health/readiness | grep UP || exist 1 "
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 10s
      networks:
        - backend-net-internal
      depends_on:
        - config-server
        - mysql-ser
        - rabbit-mq
  
  order-service:
        image: abdulmoniemalazzaly/order-service:1.0
        container_name: order-service
        healthcheck:
          test: "curl --fail --silent localhost:8012/actuator/health/readiness | grep UP || exist 1 "
          interval: 10s
          timeout: 5s
          retries: 5
          start_period: 10s
        networks:
          - backend-net-internal
        depends_on:
          - config-server
          - mysql-ser
          - notification-service

  payment-service:
        image: abdulmoniemalazzaly/payment-service:1.0
        container_name: payment-service
        healthcheck:
          test: "curl --fail --silent localhost:8012/actuator/health/readiness | grep UP || exist 1 "
          interval: 10s
          timeout: 5s
          retries: 5
          start_period: 10s
        networks:
          - backend-net-internal
        depends_on:
          - config-server
          - mysql-ser
          - order-service

  
          
networks:
  backend-net-internal:
    driver: bridge
    external: false
  app-net:
    driver: bridge

volumes:
  elasticsearch_data:
    driver: local
  sqlvol:
    driver: local
